class APIFeatures {
  constructor(query, queryStr) {
    this.query = query;      // Mongoose query (vd: Restaurant.find())
    this.queryStr = queryStr; // Query string t·ª´ request (req.query)
  }

  // üîç T√¨m ki·∫øm theo keyword (theo t√™n)
  search() {
    const keyword = this.queryStr.keyword
        ? {
          name: {
            $regex: this.queryStr.keyword,
            $options: "i", // kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng
          },
        }
        : {};

    this.query = this.query.find({ ...keyword });
    return this;
  }

  // üîé L·ªçc theo ƒëi·ªÅu ki·ªán (price, ratings, ...), ƒë·ªìng th·ªùi h·ªó tr·ª£ sort
  filter() {
    const queryObj = { ...this.queryStr };
    const excludeFields = ["keyword", "sortBy", "page"];
    excludeFields.forEach((el) => delete queryObj[el]);

    // H·ªó tr·ª£ to√°n t·ª≠ Mongo (gt, gte, lt, lte)
    let queryStr = JSON.stringify(queryObj);
    queryStr = queryStr.replace(/\b(gt|gte|lt|lte)\b/g, (match) => `$${match}`);

    this.query = this.query.find(JSON.parse(queryStr));

    // S·∫Øp x·∫øp (n·∫øu c√≥ sortBy trong query)
    if (this.queryStr.sortBy) {
      const sortKey = this.queryStr.sortBy.toLowerCase();
      let sortQuery = {};
      if (sortKey === "ratings") sortQuery = { ratings: -1 };
      else if (sortKey === "reviews") sortQuery = { numOfReviews: -1 };

      this.query = this.query.sort(sortQuery);
    }

    return this;
  }

  // üìÑ Ph√¢n trang
  pagination(resPerPage) {
    const currentPage = Number(this.queryStr.page) || 1;
    const skip = resPerPage * (currentPage - 1);

    this.query = this.query.limit(resPerPage).skip(skip);
    return this;
  }

  // üìë Ch·ªâ sort (n·∫øu ch·ªâ mu·ªën g·ªçi ri√™ng l·∫ª)
  sort() {
    if (this.queryStr.sortBy) {
      const sortKey = this.queryStr.sortBy.toLowerCase();
      let sortQuery = {};

      if (sortKey === "ratings") sortQuery = { ratings: -1 };
      else if (sortKey === "reviews") sortQuery = { numOfReviews: -1 };

      this.query = this.query.sort(sortQuery);
    }
    return this;
  }
}

module.exports = APIFeatures;
